# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 branches:
   include:
     - main

pool:
  vmImage: ubuntu-latest

variables:
  pythonVersion: '3.11'

stages:
- stage: Build
  displayName: Build Stage
  jobs:
  - job: InstallDependencies
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        addToPath: true
        architecture: 'x64'
      displayName: 'Use Python $(pythonVersion)'

    - task: PythonScript@0
      inputs:
        scriptSource: 'inline'
        script: |
          python -m venv venv
          source env/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      displayName: 'Install dependecies and migrate'
      
- stage: Deploy
  dependsOn: Build
  displayName: 'Deploy'
  jobs:
  - job: 'DeployToAppService'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(pythonVersion)'
        addToPath: true
        architecture: 'x64'
      displayName: 'Use Python $(pythonVersion)'
    
    - task: PythonScript@0
      inputs:
        scriptSource: 'inline'
        script: |
          python -m venv venv
          source env/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          python manage.py collectstatic --noinput
          python manage.py migrate
      displayName: 'Install dependecies, migrate and collect static files'

    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(Build.BinariesDirectory)'
        includeRootFolder: true
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        replaceExistingArchive: true
    
    - task: AzureRmWebAppDeployment@4
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'azure-connection'
        appType: 'webAppLinux'
        WebAppName: 'django-app-sample'
        packageForLinux: '$(System.DefaultWorkingDirectory)/**/*.zip'
        RuntimeStack: 'PYTHON|3.11'
        StartupCommand: 'sudo systemctl restart nginx'
    


    